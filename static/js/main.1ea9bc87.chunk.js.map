{"version":3,"sources":["authConfig.js","authConfigForCustomer.js","components/SignInButton.jsx","components/SignOutButton.jsx","components/PageLayout.jsx","graph.js","App.jsx","index.js"],"names":["msalConfig","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","LogLevel","Error","console","error","Info","info","Verbose","debug","Warning","warn","loginRequest","scopes","graphConfig","useState","setTenantId","loginRequestCustomer","graphConfigCustomer","SignInButton","instance","useMsal","handleLogin","loginType","loginPopup","catch","e","loginRedirect","DropdownButton","variant","className","drop","title","Dropdown","Item","as","onClick","SignOutButton","handleLogout","logoutType","logoutPopup","postLogoutRedirectUri","mainWindowRedirectUri","logoutRedirect","PageLayout","props","isAuthenticated","useIsAuthenticated","style","padding","background","width","color","margin","fontWeight","fontSize","href","children","accessToken","a","headers","Headers","bearer","append","options","method","fetch","then","response","json","log","ProfileContent","accounts","graphData","setGraphData","graphDataOrganization","setGraphDataOrganization","graphDataContracts","setGraphDataContracts","setCustomerLicenseList","RequestCustomerLicenseList","tenantId","msalConfigInitial","acquireTokenSilent","account","callMsGraphCustomerLicense","name","listStyleType","displayName","surname","givenName","mail","id","Button","callMsGraph","value","verifiedDomains","callMsGraphOrganization","map","v","i","defaultDomainName","customerId","border","borderRadius","callMsGraphContracts","MainContent","fontFamily","marginTop","App","msalInstance","PublicClientApplication","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ea9bc87.chunk.js","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { LogLevel } from \"@azure/msal-browser\";\n\n/**\n * Configuration object to be passed to MSAL instance on creation. \n * For a full list of MSAL.js configuration parameters, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \n */\nexport const msalConfig = {\n    auth: {\n        clientId: \"bfcde4ee-93cd-4b39-89df-1295ec6d44bd\",\n        authority: \"https://login.microsoftonline.com/73c32d63-f0cc-4e50-90bc-f9d54290581e\",\n        redirectUri: \"https://finn1018.github.io/OAuth-test-app/\"\n    },\n    cache: {\n        cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n    },\n    system: {\t\n        loggerOptions: {\t\n            loggerCallback: (level, message, containsPii) => {\t\n                if (containsPii) {\t\t\n                    return;\t\t\n                }\t\t\n                switch (level) {\t\t\n                    case LogLevel.Error:\t\t\n                        console.error(message);\t\t\n                        return;\t\t\n                    case LogLevel.Info:\t\t\n                        console.info(message);\t\t\n                        return;\t\t\n                    case LogLevel.Verbose:\t\t\n                        console.debug(message);\t\t\n                        return;\t\t\n                    case LogLevel.Warning:\t\t\n                        console.warn(message);\t\t\n                        return;\t\t\n                }\t\n            }\t\n        }\t\n    }\n};\n\n/**\n * Scopes you add here will be prompted for user consent during sign-in.\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\n * For more information about OIDC scopes, visit: \n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\n */\nexport const loginRequest = {\n    scopes: [\"User.Read\"]\n};\n\n/**\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\n */\nexport const graphConfig = {\n    graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\",\n    graphOrganizationEndpoint: \"https://graph.microsoft.com/v1.0/organization\",\n    graphContractsEndpoint: \"https://graph.microsoft.com/v1.0/contracts\"\n\n};\n\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { LogLevel } from \"@azure/msal-browser\";\nimport { useState } from \"react\";\n\n/**\n * Configuration object to be passed to MSAL instance on creation. \n * For a full list of MSAL.js configuration parameters, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \n */\nlet [tenantId,setTenantId] = useState(\"\");\n\nexport function msalConfigInitial(tenantId) {\n    setTenantId(tenantId);\n    return msalConfig;\n}\n\nexport const msalConfig = {\n    auth: {\n        clientId: \"bfcde4ee-93cd-4b39-89df-1295ec6d44bd\",\n        authority: \"https://login.microsoftonline.com/\"+{tenantId},\n        redirectUri: \"https://finn1018.github.io/OAuth-test-app/\"\n    },\n    cache: {\n        cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n    },\n    system: {\t\n        loggerOptions: {\t\n            loggerCallback: (level, message, containsPii) => {\t\n                if (containsPii) {\t\t\n                    return;\t\t\n                }\t\t\n                switch (level) {\t\t\n                    case LogLevel.Error:\t\t\n                        console.error(message);\t\t\n                        return;\t\t\n                    case LogLevel.Info:\t\t\n                        console.info(message);\t\t\n                        return;\t\t\n                    case LogLevel.Verbose:\t\t\n                        console.debug(message);\t\t\n                        return;\t\t\n                    case LogLevel.Warning:\t\t\n                        console.warn(message);\t\t\n                        return;\t\t\n                }\t\n            }\t\n        }\t\n    }\n};\n\n/**\n * Scopes you add here will be prompted for user consent during sign-in.\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\n * For more information about OIDC scopes, visit: \n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\n */\nexport const loginRequestCustomer = {\n    scopes: [\"User.Read\"]\n};\n\n/**\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\n */\nexport const graphConfigCustomer = {\n    graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\",\n    graphOrganizationEndpoint: \"https://graph.microsoft.com/v1.0/organization\",\n    graphContractsEndpoint: \"https://graph.microsoft.com/v1.0/contracts\",\n    graphCustomerLicenseEndpoint: \"https://graph.microsoft.com/v1.0/subscribedSkus\"\n\n};\n\n","import React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from \"../authConfig\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/esm/Dropdown\";\n\n/**\n * Renders a drop down button with child buttons for logging in with a popup or redirect\n */\nexport const SignInButton = () => {\n    const { instance } = useMsal();\n\n    const handleLogin = (loginType) => {\n        if (loginType === \"popup\") {\n            instance.loginPopup(loginRequest).catch(e => {\n                console.error(e);\n            });\n        } else if (loginType === \"redirect\") {\n            instance.loginRedirect(loginRequest).catch(e => {\n                console.error(e);\n            });\n        }\n    }\n    return (\n        <DropdownButton variant=\"secondary\" className=\"ml-auto\" drop=\"left\" title=\"로그인\">\n            <Dropdown.Item as=\"button\" onClick={() => handleLogin(\"popup\")}>팝업</Dropdown.Item>\n            <Dropdown.Item as=\"button\" onClick={() => handleLogin(\"redirect\")}>리다이렉트</Dropdown.Item>\n        </DropdownButton>\n    )\n}","import React from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/esm/Dropdown\";\n\n/**\n * Renders a sign-out button\n */\nexport const SignOutButton = () => {\n    const { instance } = useMsal();\n\n    const handleLogout = (logoutType) => {\n        if (logoutType === \"popup\") {\n            instance.logoutPopup({\n                postLogoutRedirectUri: \"https://finn1018.github.io/OAuth-test-app/\",\n                mainWindowRedirectUri: \"https://finn1018.github.io/OAuth-test-app/\"\n            });\n        } else if (logoutType === \"redirect\") {\n            instance.logoutRedirect({\n                postLogoutRedirectUri: \"https://finn1018.github.io/OAuth-test-app/\",\n            });\n        }\n    }\n    return (\n        <DropdownButton variant=\"secondary\" className=\"ml-auto\" drop=\"left\" title=\"로그아웃\">\n            <Dropdown.Item as=\"button\" onClick={() => handleLogout(\"popup\")}>팝업</Dropdown.Item>\n            <Dropdown.Item as=\"button\" onClick={() => handleLogout(\"redirect\")}>리다이렉트</Dropdown.Item>\n        </DropdownButton>\n    )\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport React from \"react\";\n\nimport { useIsAuthenticated } from \"@azure/msal-react\";\nimport { SignInButton } from \"./SignInButton\";\nimport { SignOutButton } from \"./SignOutButton\";\n\n/**\n * Renders the navbar component with a sign-in or sign-out button depending on whether or not a user is authenticated\n * @param props \n */\nexport const PageLayout = (props) => {\n    const isAuthenticated = useIsAuthenticated();\n\n    return (\n        <>\n            <div className=\"nav\" style={{padding: \"30px\",background: \"black\", width: \"100%\"}}>\n                <a className=\"navbar-brand\" style={{color:\"white\", margin: \"0px\", fontWeight: 600, fontSize:\"17px\"}} href=\"https://finn1018.github.io/OAuth-test-app/\">Microsoft Graph</a>\n                { isAuthenticated ? <SignOutButton /> : <SignInButton /> }\n            </div>\n            <h5><center></center></h5>\n            <br />\n            <br />\n            {props.children}\n        </>\n    );\n};\n","\nimport { graphConfig } from \"./authConfig\";\nimport { graphConfigCustomer } from \"./authConfigForCustomer\";\n\n/**\n * Attaches a given access token to a MS Graph API call. Returns information about the user\n * @param accessToken \n */\nexport async function callMsGraph(accessToken) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n\n    const options = {\n        method: \"GET\",\n        headers: headers\n    };\n\n    return fetch(graphConfig.graphMeEndpoint, options)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function callMsGraphOrganization(accessToken) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n\n    const options = {\n        method: \"GET\",\n        headers: headers\n    };\n\n    return fetch(graphConfig.graphOrganizationEndpoint, options)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function callMsGraphContracts(accessToken) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n\n    const options = {\n        method: \"GET\",\n        headers: headers\n    };\n\n    return fetch(graphConfig.graphContractsEndpoint, options)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}\n\nexport async function callMsGraphCustomerLicense(accessToken) {\n    const headers = new Headers();\n    const bearer = `Bearer ${accessToken}`;\n\n    headers.append(\"Authorization\", bearer);\n\n    const options = {\n        method: \"GET\",\n        headers: headers\n    };\n\n    return fetch(graphConfigCustomer.graphCustomerLicenseEndpoint, options)\n        .then(response => response.json())\n        .catch(error => console.log(error));\n}","import React, { useState } from \"react\";\nimport { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from \"@azure/msal-react\";\nimport { loginRequest } from \"./authConfig\";\nimport { loginRequestCustomer, msalConfigInitial } from \"./authConfigForCustomer\";\nimport { PageLayout } from \"./components/PageLayout\";\nimport { callMsGraph, callMsGraphOrganization, callMsGraphContracts, callMsGraphCustomerLicense } from \"./graph\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./styles/App.css\";\n\n\n/**\n * Renders information about the signed-in user or a button to retrieve data about the user\n */\nconst ProfileContent = () => {\n    const { instance, accounts } = useMsal();\n    const [graphData, setGraphData] = useState(null);\n    const [graphDataOrganization, setGraphDataOrganization] = useState(null);\n    const [graphDataContracts, setGraphDataContracts] = useState(null);\n    const [CustomerLicenseList, setCustomerLicenseList] = useState(null);\n\n    function RequestProfileData() {\n        instance.acquireTokenSilent({\n            ...loginRequest,\n            account: accounts[0]\n        }).then((response) => {\n            callMsGraph(response.accessToken).then(response => setGraphData(response));\n        });\n    }\n    function RequestProfileDataOrganization() {\n        instance.acquireTokenSilent({\n            ...loginRequest,\n            account: accounts[0]\n        }).then((response) => {\n            callMsGraphOrganization(response.accessToken).then(response => setGraphDataOrganization(response));\n        });\n    }\n\n    function RequestProfileDataContracts() {\n        instance.acquireTokenSilent({\n            ...loginRequest,\n            account: accounts[0]\n        }).then((response) => {\n            callMsGraphContracts(response.accessToken).then(response => setGraphDataContracts(response));\n        });\n    }\n\n    function RequestCustomerLicenseList(tenantId) {\n        msalConfigInitial(tenantId)\n        instance.acquireTokenSilent({\n            ...loginRequestCustomer,\n            account: accounts[0]\n        }).then((response) => {\n            callMsGraphCustomerLicense(response.accessToken).then(response => setCustomerLicenseList(response));\n        });\n    }\n\n    const contracts = () => graphDataContracts.value.map((v,i)=> {\n            return (\n                <li key={i}>\n                    {i}.<br />\n                    DisplayName: {v.displayName}<br/>\n                    Default Domain Name: {v.defaultDomainName}<br/>\n                    ID: {v.id}<br/>\n                    Customer ID: {v.customerId}<br/>\n                    <button style={{border: \"none\", fontSize: \"12px\", borderRadius: \"7px\", background: \"black\", color: \"white\"}}\n                                    onClick={()=>RequestCustomerLicenseList(v.id)}>보유 라이선스</button>\n                    <br/><br/>\n                </li>\n            )\n    }) \n\n    return (\n        <>\n            <h5 className=\"card-title\">환영합니다. {accounts[0].name} 님!</h5>\n            <div>\n            {graphData \n            ? <ul style={{padding: \"0px\"}}>\n                <li style={{listStyleType: \"none\"}}>Display Name: {graphData.displayName}</li>\n                <li style={{listStyleType: \"none\"}}>Sur Name: {graphData.surname}</li>\n                <li style={{listStyleType: \"none\"}}>Given Name: {graphData.givenName}</li>\n                <li style={{listStyleType: \"none\"}}>Mail: {graphData.mail}</li>\n                <li style={{listStyleType: \"none\"}}>ID: {graphData.id}</li>\n                </ul>\n                :<Button variant=\"secondary\" onClick={RequestProfileData}>내 계정 정보 보기</Button>\n            }\n            </div>\n            <br/>\n            <div>\n                {graphDataOrganization\n                ?<ul style={{padding: \"0px\"}}>\n                    <li style={{listStyleType: \"none\"}}>Tenant ID: {graphDataOrganization.value[0].id}</li>\n                    <li style={{listStyleType: \"none\"}}>Display Name: {graphDataOrganization.value[0].displayName}</li>\n                    <li style={{listStyleType: \"none\"}}>Initial Domain: {graphDataOrganization.value[0].verifiedDomains[0].name}</li>\n                    <li style={{listStyleType: \"none\"}}>Primary Domain: {graphDataOrganization.value[0].verifiedDomains[1].name}</li>\n                    \n                </ul>\n                :<Button variant=\"secondary\" onClick={RequestProfileDataOrganization}>조직 정보 보기</Button>\n                }\n            </div>\n            <br/>\n            <div>\n                {graphDataContracts\n                ?<ul style={{padding: \"0px\"}}>\n                    {contracts()}\n                </ul>\n                :<Button variant=\"secondary\" onClick={RequestProfileDataContracts}>고객 정보 보기</Button>\n                }\n            </div>\n        </>\n    );\n};\n\n\nconst MainContent = () => {    \n    return (\n        <div className=\"App\">\n            <AuthenticatedTemplate>\n                <ProfileContent />\n            </AuthenticatedTemplate>\n\n            <UnauthenticatedTemplate>\n                <h5 style={{fontFamily:\"nanusquare\", fontWeight:600, marginTop:\"12%\", fontSize:\"15px\",color:\"gray\"}}className=\"card-title\">로그인을 완료해 주세요!</h5>\n            </UnauthenticatedTemplate>\n        </div>\n    );\n};\n\nexport default function App() {\n    return (\n        <PageLayout>\n            <MainContent />\n        </PageLayout>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/index.css\";\nimport App from \"./App.jsx\";\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { msalConfig } from \"./authConfig\";\n\n/**\n * Initialize a PublicClientApplication instance which is provided to the MsalProvider component\n * We recommend initializing this outside of your root component to ensure it is not re-initialized on re-renders\n */\nconst msalInstance = new PublicClientApplication(msalConfig);\n\n/**\n * We recommend wrapping most or all of your components in the MsalProvider component. It's best to render the MsalProvider as close to the root as possible.\n */\nReactDOM.render(\n    <React.StrictMode>\n        <MsalProvider instance={msalInstance}>\n            <App />\n        </MsalProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}